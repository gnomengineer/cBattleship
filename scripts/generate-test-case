#!/usr/bin/env python

import sys

def read_template(file, vars):
    f = open(file, "r")
    contents = f.read()
    f.close()
    for var, value in vars.items():
        contents = contents.replace("@" + var + "@", value)

    return contents



method_implementations = ""
method_declarations = ""
methods_add_suite = ""

name = sys.argv[1]
template_vars = {"NAME": name, "UP_NAME": name.upper(), "METHOD_IMPLEMENTATIONS": "", "METHOD_DECLARATIONS": "", "METHODS_ADD_SUITE": ""}

methods = sys.argv[2:]
for method in methods:
    template_vars["METHOD_NAME"] = method
    template_vars["METHOD_IMPLEMENTATIONS"] += read_template("scripts/test-case-template/method-implementation", template_vars)
    template_vars["METHOD_DECLARATIONS"]    += read_template("scripts/test-case-template/method-declaration", template_vars)
    template_vars["METHODS_ADD_SUITE"]    += read_template("scripts/test-case-template/method-registration", template_vars)


source_file = read_template("scripts/test-case-template/source-file", template_vars)
header_file = read_template("scripts/test-case-template/header-file", template_vars)


f = open("src/test/" + name + "Test.cpp", "w")
f.write(source_file)
f.close()
f = open("src/test/" + name + "Test.h", "w")
f.write(header_file)
f.close()

