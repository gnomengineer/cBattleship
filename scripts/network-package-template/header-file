#ifndef _{{{uppercase_name}}}PACKAGE_H
#define _{{{uppercase_name}}}PACKAGE_H

#include <boost/archive/polymorphic_text_oarchive.hpp>
#include <boost/archive/polymorphic_text_iarchive.hpp>

#include "{{#authenticated}}Authenticated{{/authenticated}}NetworkPackage.h"

class {{{name}}}Package : public {{#authenticated}}Authenticated{{/authenticated}}NetworkPackage {
    private:
        /* this class is serializable through
           the boost.serialization library */
        friend class boost::serialization::access;
        template<class Archive>
        void serialize(Archive &ar, const unsigned int version) {
            ar & boost::serialization::base_object<{{#authenticated}}Authenticated{{/authenticated}}NetworkPackage>(*this);
{{#members}}
            ar & this->{{{property}}};
{{/members}}
        }

{{#members}}
        {{{type}}} {{{property}}};
{{/members}}

    public:
        {{{name}}}Package() { }
        virtual ~{{{name}}}Package() { }

        virtual package_nr_t get_package_nr() {
            return {{{command_nr}}};
        }

{{#members}}
        {{{type}}} get_{{{property}}}() {
            return {{{property}}};
        }

        void set_{{{property}}}({{{type}}} {{{property}}}) {
            this->{{{property}}} = {{{property}}};
        }

{{/members}}
};


#endif /* _{{{uppercase_name}}}PACKAGE_H */
